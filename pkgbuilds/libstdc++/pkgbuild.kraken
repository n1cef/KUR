
pkgname=nano
pkgver=8.3

dependencies=(
	
	
)
sources=(
	"https://ftp.gnu.org/gnu/gcc/gcc-14.2.0/gcc-14.2.0.tar.xz"
)

md5sums=(
	'2268420ba02dc01821960e274711bde0'
)


kraken_prepare() {
	
	tar -xvf "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}.tar.xz" -C "${SOURCE_DIR}/${pkgname}" &&

	cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&

    mkdir -v build &&
 cd       build &&


	../libstdc++-v3/configure           \
    --host=$KRAKEN_TGT                 \
    --build=$(../config.guess)      \
    --prefix=/usr                   \
    --disable-multilib              \
    --disable-nls                   \
    --disable-libstdcxx-pch         \
    --with-gxx-include-dir=/tools/$KRAKEN_TGT/include/c++/14.2.0
}

kraken_build() {
	cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
    cd build &&

	make
}

kraken_test() {
	#cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
	#make check
	echo "$pkgname does not come with a test suite nothing to do !"  
    return 0
}

kraken_install() {
	cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
    cd build &&

	make DESTDIR=$KRAKEN install
    return 0
}

kraken_preinstall() {
    cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
    cd build &&
	rm -v $KRAKEN/usr/lib/lib{stdc++{,exp,fs},supc++}.la
	return 0
}

kraken_postinstall() {
	cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
    
	return 0 
}

kraken_preremove() {
	return
}

kraken_remove() {
	cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
 	
	return 0
}

kraken_postremove() {
	return
}

# vim:set ts=4 syntax=sh:
