
pkgname=kubectl
pkgver=last-release

dependencies=(
	
	
)
sources=(
	""
)

md5sums=(
	''
)


kraken_prepare() {
	
	

	cd "${SOURCE_DIR}/${pkgname}"
    cat < krakeninstall.sh >> 'EOF'


#!/bin/bash


echo "install kubectl in kraken os "

sleep 1 

echo "create source directory ..."
sleep 1 



#mkdir  -pv /sources/kubectl
cd /sources/kubectl


echo "Download the latest release"

sleep 2 
  curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"


 echo "Download the kubectl checksum file"



   curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
   sleep 2 


echo "Validate the kubectl binary against the checksum file"

echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check



sleep 2 


echo "If valid, the output is: "


echo "kubectl: OK"

echo "Install kubectl"


sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl


sleep 2 echo "Test to ensure the version you installed is up-to-date:"


echo "run kubectl version --client"


exit 0






    EOF



    chmod +x krakeninstall.sh

    /krakeninstall.sh

    sleep 2 

    echo "installation finish "

	
}
kraken_build() {
	
}

kraken_test() {
	cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
	
	echo "$pkgname does not come with a test suite nothing to do !"  
    return 0
}

kraken_install() {
	
    return 0
}

kraken_preinstall() {
	
	return 0
}

kraken_postinstall() {
	cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
   
	return 0 
}

kraken_preremove() {
	return
}

kraken_remove() {
	
 	
	return 
}

kraken_postremove() {
	return
}

# vim:set ts=4 syntax=sh:
