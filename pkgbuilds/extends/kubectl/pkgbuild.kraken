
pkgname=kubectl
pkgver=last-release

dependencies=(
	
	
)
sources=(
	""
)

md5sums=(
	''
)


kraken_prepare() {
	
	

	cd "${SOURCE_DIR}/${pkgname}"
    cat > krakeninstall.sh << 'EOF'  
#!/bin/bash
set -e  # Exit on error

echo "Installing kubectl in Kraken OS"
sleep 1

echo "Creating source directory..."
sleep 1

mkdir -pv /sources/kubectl
cd /sources/kubectl || exit 1

echo "Downloading the latest release"
sleep 2
curl -fLO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"

echo "Downloading the kubectl checksum file"
sleep 2
curl -fLO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"

echo "Validating kubectl binary"
echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check

sleep 2
echo "If valid, the output is:"
echo "kubectl: OK"

echo "Installing kubectl"
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

sleep 2
echo "Testing installation:"
echo "kubectl version --client"

exit 0
EOF  



    chmod +x krakeninstall.sh

    ./krakeninstall.sh

    sleep 2 

    echo "installation finish "

	
}
kraken_build() {
	
}

kraken_test() {
	cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
	
	echo "$pkgname does not come with a test suite nothing to do !"  
    return 0
}

kraken_install() {
	
    return 0
}

kraken_preinstall() {
	
	return 0
}

kraken_postinstall() {
	cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
   
	return 0 
}

kraken_preremove() {
	return
}

kraken_remove() {
	
 	
	return 
}

kraken_postremove() {
	return
}

# vim:set ts=4 syntax=sh:
