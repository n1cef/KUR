
pkgname=gcc
pkgver=14.2.0

dependencies=(
	
	
)
sources=(
	"https://ftp.gnu.org/gnu/gcc/gcc-14.2.0/gcc-14.2.0.tar.xz"
)

md5sums=(
	'2268420ba02dc01821960e274711bde0'
)


kraken_prepare() {
	
	tar -xvf "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}.tar.xz" -C "${SOURCE_DIR}/${pkgname}" &&

	cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
    case $(uname -m) in
  x86_64)
    sed -e '/m64=/s/lib64/lib/' \
        -i.orig gcc/config/i386/t-linux64
  ;;
esac
mkdir -v build
cd       build

../configure --prefix=/usr            \
             LD=ld                    \
             --enable-languages=c,c++ \
             --enable-default-pie     \
             --enable-default-ssp     \
             --enable-host-pie        \
             --disable-multilib       \
             --disable-bootstrap      \
             --disable-fixincludes    \
             --with-system-zlib

	
}
kraken_build() {
	cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
    cd build 
	make
}

kraken_test() {
	#cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
	
	ulimit -s -H unlimited
    sed -e '/cpython/d'               -i ../gcc/testsuite/gcc.dg/plugin/plugin.exp
sed -e 's/no-pic /&-no-pie /'     -i ../gcc/testsuite/gcc.target/i386/pr113689-1.c
sed -e 's/300000/(1|300000)/'     -i ../libgomp/testsuite/libgomp.c-c++-common/pr109062.c
sed -e 's/{ target nonpic } //' \
    -e '/GOTPCREL/d'              -i ../gcc/testsuite/gcc.target/i386/fentryname3.c

    chown -R tester .
su tester -c "PATH=$PATH make -k check"  
    return 0
}

kraken_install() {
	cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
	cd build 
    make install
    return 0
}

kraken_preinstall() {
	cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
	echo "nothing to do !"
	return 0
}

kraken_postinstall() {
	cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
    cd build
    chown -v -R root:root \
    /usr/lib/gcc/$(gcc -dumpmachine)/14.2.0/include{,-fixed}
    ln -svr /usr/bin/cpp /usr/lib
    ln -sv gcc.1 /usr/share/man/man1/cc.1
    ln -sfv ../../libexec/gcc/$(gcc -dumpmachine)/14.2.0/liblto_plugin.so \
        /usr/lib/bfd-plugins/
        
    echo 'int main(){}' > dummy.c
cc dummy.c -v -Wl,--verbose &> dummy.log
readelf -l a.out | grep ': /lib' 
echo "the last ouput should be like this 
[Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]

"   
 sleep 5
  grep -E -o '/usr/lib.*/S?crt[1in].*succeeded' dummy.log
  echo "the ouput must be like this 
  /usr/lib/gcc/x86_64-pc-linux-gnu/14.2.0/../../../../lib/Scrt1.o succeeded
/usr/lib/gcc/x86_64-pc-linux-gnu/14.2.0/../../../../lib/crti.o succeeded
/usr/lib/gcc/x86_64-pc-linux-gnu/14.2.0/../../../../lib/crtn.o succeeded
  "
  sleep 5
grep -B4 '^ /usr/include' dummy.log

echo "the output should be like this 
#include <...> search starts here:
 /usr/lib/gcc/x86_64-pc-linux-gnu/14.2.0/include
 /usr/local/include
 /usr/lib/gcc/x86_64-pc-linux-gnu/14.2.0/include-fixed
 /usr/include
"
sleep 5

grep 'SEARCH.*/usr/lib' dummy.log |sed 's|; |\n|g'

echo "the output must be the same as 

SEARCH_DIR("/usr/x86_64-pc-linux-gnu/lib64")
SEARCH_DIR("/usr/local/lib64")
SEARCH_DIR("/lib64")
SEARCH_DIR("/usr/lib64")
SEARCH_DIR("/usr/x86_64-pc-linux-gnu/lib")
SEARCH_DIR("/usr/local/lib")
SEARCH_DIR("/lib")
SEARCH_DIR("/usr/lib");

"
sleep 5

grep "/lib.*/libc.so.6 " dummy.log
echo "the ouput must be like 
attempt to open /usr/lib/libc.so.6 succeeded

"
sleep 5 

grep found dummy.log
echo "the output should be like this 

found ld-linux-x86-64.so.2 at /usr/lib/ld-linux-x86-64.so.2
"

rm -v dummy.c a.out dummy.log

mkdir -pv /usr/share/gdb/auto-load/usr/lib
mv -v /usr/lib/*gdb.py /usr/share/gdb/auto-load/usr/lib
	return 0 
}

kraken_preremove() {
	return
}

kraken_remove() {
	cd "${SOURCE_DIR}/${pkgname}/${pkgname}-${pkgver}" &&
 	
	return 0
}

kraken_postremove() {
	return
}

# vim:set ts=4 syntax=sh:
